---
- name: Configure Jenkins with JCasC and Install Required Plugins
  hosts: jenkins
  become: true
  vars:
    jenkins_plugins:
      - configuration-as-code
      - docker-plugin
      - docker-workflow
      - workflow-aggregator
      - git
      - pipeline-model-definition
      - credentials-binding
      - ssh-credentials
      - role-strategy
      - authorize-project
      - cloudbees-folder
      - build-timeout
      - timestamper
      - ws-cleanup
      - ansicolor
      - github-branch-source
      - pipeline-stage-view

  tasks:
    - name: Wait for Jenkins to start
      wait_for:
        host: "{{ ansible_host }}"
        port: 8080
        timeout: 300
        state: started

    - name: Get Jenkins Admin Password
      slurp:
        src: /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_admin_password_file

    - name: Set Jenkins Admin Password variable
      set_fact:
        jenkins_admin_password: "{{ jenkins_admin_password_file['content'] | b64decode | trim }}"

    - name: Download Jenkins CLI jar
      get_url:
        url: "http://{{ ansible_host }}:8080/jnlpJars/jenkins-cli.jar"
        dest: /tmp/jenkins-cli.jar
        mode: '0755'
      retries: 3
      delay: 5

    - name: Install Jenkins Plugins
      shell: |
        java -jar /tmp/jenkins-cli.jar -s http://{{ ansible_host }}:8080 -auth admin:{{ jenkins_admin_password }} install-plugin {{ item }}
      loop: "{{ jenkins_plugins }}"
      register: plugin_installation
      retries: 3
      delay: 10
      until: plugin_installation is not failed

    - name: Deploy JCasC configuration file
      copy:
        src: "{{ playbook_dir }}/../files/jenkins-casc-config.yaml"
        dest: /var/lib/jenkins/jenkins.yaml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Configure JCasC environment variable
      lineinfile:
        path: /etc/default/jenkins
        regexp: '^CASC_JENKINS_CONFIG='
        line: 'CASC_JENKINS_CONFIG=/var/lib/jenkins/jenkins.yaml'
        create: yes

    - name: Restart Jenkins to apply changes
      systemd:
        name: jenkins
        state: restarted
        daemon_reload: yes

    - name: Wait for Jenkins to restart
      wait_for:
        host: "{{ ansible_host }}"
        port: 8080
        timeout: 300
        state: started