# tools/jenkins/values.yaml
controller:
  image:
    registry: "docker.io"
    repository: "jenkins/jenkins"
    tag: "lts"
  installPlugins:
    - kubernetes:latest
    - git:latest
    - configuration-as-code:latest
    - workflow-aggregator:latest
    - sonar:latest
    - pipeline-utility-steps:latest
    - workflow-multibranch:latest
  JCasC:
    configScripts:
      credentials: |
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - string:
                      scope: GLOBAL
                      id: "sonar-token"
                      secret: ${SONAR_TOKEN}
                      description: "SonarQube Token"
      jenkins-auth: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "admin"
                  password: "admin@123"
          authorizationStrategy: loggedInUsersCanDoAnything
      sonar: |
        unclassified:
          sonarGlobalConfiguration:
            buildWrapperEnabled: true
            installations:
              - name: "SonarQube"
                serverUrl: "http://sonarqube-sonarqube.devsecops:9000"
                credentialsId: "sonar-token"
      kubernetes: |
        jenkins:
          clouds:
            - kubernetes:
                name: "kubernetes"
                serverUrl: "https://kubernetes.default"
                namespace: "devsecops"
                skipTlsVerify: true
                jenkinsUrl: "http://jenkins.devsecops:8080"
                jenkinsTunnel: "jenkins-agent.devsecops:50000"
                templates:
                  - name: "jenkins-agent"
                    label: "jenkins-agent"
                    nodeUsageMode: NORMAL
                    containers:
                      - name: "jnlp"
                        image: "jenkins/inbound-agent:latest"
                        alwaysPullImage: true
                    idleMinutes: 0
                    volumes:
                      - hostPathVolume:
                          hostPath: "/var/run/docker.sock"
                          mountPath: "/var/run/docker.sock"
      jobs: |
        jobs:
          - script: >
              pipelineJob('test-integration') {
                definition {
                  cpsScm {
                    lightweight(true)
                    scm {
                      git {
                        remote {
                          url('https://github.com/satishgonella2024/code-driven-homelab.git')
                        }
                        branch('*/main')
                      }
                    }
                    scriptPath('tools/jenkins/manifests/pipelines/test-integration.groovy')
                  }
                }
              }
  extraEnv:
    - name: SONAR_TOKEN
      valueFrom:
        secretKeyRef:
          name: jenkins-sonar-token
          key: token
  serviceType: LoadBalancer
  loadBalancerIP: "192.168.5.241"

persistence:
  enabled: true
  size: 10Gi
  storageClass: longhorn
  accessMode: ReadWriteOnce